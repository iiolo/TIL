/* fixed 확인 용 */
/* body {
  height: 4000px;
} */

/* .parent {
  width: 400px;
  height: 300px;
  border: 4px dashed lightgray;
}
.child {
  width: 150px;
  height: 100px;
  background: tomato;
  border: 4px solid red;
  border-radius:10px; */
  /*position: absolute;*//*부모요소를 기준으로 설정*/
  
/*   position과 같이 사용되는 속성 */
/*   위치 지정 속성 */
/*   top: 50px;
  left: 100px; */
/*   right: 50px;
  bottom:20px;
} */

/* 1. relative */
/* .box {
  width: 100px;
  height: 100px;
  background: tomato;
  border: 4px dashed red;
  border-radius : 10px;
  display: flex;
  justify-content: center;
  align-items:center;
  font-size:30px;
}
.relative {
  position: relative;*//*자기 자신 기준 배치 준비*/ 
/*   top: 20px; */
/*   bottom: 50px; */
/*   bottom: 40px; */
/*   left: 150px; */
/*   left: 160px; */
  /*right: 30px;*//*오른쪽에서 30px 거리에 배치*/
/* } */

/* 2. absolute */
/* .grand-parent {
  width: 400px;
  height: 300px;
  padding: 30px 100px 100px 30px;
  border: 4px dashed lightgray;
  
} */

/* .parent {
  width: 400px;
  height: 300px;
  border: 4px dashed gray;
   */
/*   위치상 부모요소 인지 */
/*   position: relative; */
/* } */

/* .child {
  width: 120px;
  height: 80px;
  background: tomato;
  border: 4px dashed red;
  border-radius:10px;
  font-size : 30px;
  display: flex;
  justify-content:center;
  align-items: center;
  
} */

/* .absolute { */
  /*자신을 기준으로 배치될 준비*/
/*   position: relative; */
  /*2번 박스는 부모요소를 기준으로 배치준비되서 1번박스와 3번박스와의 상관관계 무시*/
  /*position: absolute;*//* 위치 지정하기 전엔  2번 박스는 공중으로 붕 뜬 상태이고 3번 박스는 밀려서 1번 박스 밑인 2번 박스 뒤에 위치*/
  
/*  부모요소에 position 작성 안하면 뷰포트 기준으로 이동하게 됨 */
/*   top: 50px;
  left: 100px; */
  
/*   bottom: 50px;
  right: 10px; */
  
/*   3.fixed */
/*   position: fixed; */
  
/*   뷰포트 기준으로 이동 후  고정 */
/*   top: 30px;
  right: 40px;
  
} */

/* sticky */
/* .container {
  width: 400px;
  height: 400px;
  border: 4px solid red; */
 /* overflow: auto;*/ /*빨간색 영역 안에서 sticky 작동*/
/* } */
/* .section {
  height: 200px;
  border: 4px dashed lightgray;
} */

/* .section h1 {
  text-align:center;
  line-height:2;
  font-size:24px;
  font-weight:bold;
  position: sticky; */
  /*top: 0;*//*Title의 일부분이 스크롤 상단에 고정*/
  
/* } */

/* 특징 1. 요소 쌓임순서 */
/* .box-group {
  display: flex;
}

.box-group .box{
  width: 100px;
  height: 100px;
  background: tomato;
  border: 4px dashed red;
  border-radius:10px;
  font-size:30px;
  display: flex;
  justify-content:center;
  align-items:center;
   */
/*   요소의 쌓임 순서 보기 */
/*   margin-right: -30px;
  box-shadow:0 0 10px rgba(255,0,0,.7)
}

.box-group .box:nth-child(2n) {
  margin-top:30px;
} */

/* position 속성 추가해서 쌓이는 순서 변경 */
/* .box1{ */
/*   4. 2번보다 위로 올라옴 */
/*   position:relative; */
/* } */

/* .box2{ */
/*   5. 다시 원상태 복귀 */
/*   position: relative; */
  /*   9. 3번보다 더 높은 숫자를 z-index에 부여 */
/*   z-index:3; */
  
/* } */

/* .box3{ */
/*   2. 3번이 5번보다 위에 있음 */
/*   position: relative; */
/*   6. z-index의 숫자가 높을 수록 더 위에 쌓인다. position이 있을 때만 작동 */
/*   z-index:1; */
  
/*   8. 4번보다 더 높은 숫자를 z-index에 부여 */
/*   z-index:2;
} */

/* .box4{ */
/*   1.4번 박스가 가장 위에 올라오게 됨 */
/*   position: relative; */
  
/*   7. 3번과 동일해서 html이 작성된 순서에 따라 더 위에 쌓임 */
/*   z-index: 1;
} */

/* .box5{ */
/*   3.가장 늦게 작성해서 다시 맨위에 쌓이게 됨 */
/*   position: relative;
  
} */

/* 특징 2. display 수정 */
span{
  width: 100px;
  height: 100px;
  background: tomato;
  margin:30px 0;
  
/*   display가 block으로 변경됨 */
/*   position: fixed; */
  position: absolute;
}
