/* 1. order */
/* .container{
  border: 4px solid;
   */
/*   수평정렬 */
/*   display: flex;
} */
/* .container .item{
  width: 100px;
  height: 100px;
  background: tomato;
  border: 4px dashed red;
  border-radius:10px;
  font-size: 30px; */
  
/*   글자 정중앙 */  
/*   각각 아이템이 새로운 콘테이너 박스 */
/*   display: flex;
  justify-content: center;
  align-items: center;
} */

/* .item1 { */
/*   1>23456 그래서 1이 맨뒤로 */
/*   order: 1;
}
 */
/* .item4{ */
/*   순서 같을시 html 구조로 비교 */
/*   order: 1;
} */

/* 6번 order 값이 제일 작아서 맨앞에 배치됨 */
/* .item6 {
  order: -1;
} */
  
/* 2. flex-grow */
/* .container {
  border: 4px solid;
  display: flex;
}

.container .item {

/*   width: 100px; */
/*   height: 100px;
  
  background: tomato;
  border: 4px dashed red;
  border-radius:10px;
}

.item1{
  flex-grow: 1;
}


.item2 { */ 
/*   flex-grow: 2; */
  
/*   이렇게 할경우 2번부분의 변화는 없는 1번부분의 영역만 가로너비를 가변하게 설정할 수 있어 유용하다. */
/*   width: 100px;
} */

/* .item3 { */
    /* 아이템 1과 아이템2에 가로값이 지정되어 있는 상태이기에 완벽히 2배는 아니다.*/
/*   그래서 item3에만 width값 주기 */
/*   width: 100px;
} */

/* 3.flex-basis */
/* .container {
  border: 4px solid;
  display: flex;
}
 */
/* .container .item { */
/*   width: 100px; */
/*   height: 100px;
  background: tomato;
  border: 4px dashed red;
  border-radius:10px; */
  
/*   flex-basis: auto -> item 각각의 텍스트를 제외한 여백들이 1대 1대 1 비율로 맞춰짐 */
/*   flex-grow: 1; */
  
/*   각각의 item 전체너비 동일하게-> 전체너비로 1대 1대 1 */
/*   flex-basis: 0; */
  
/*   기본적으로 flex-basis가 가질 100px를 제외한 나머지 여백을 가지고 1:1:2로 맞춰서 item 전체 너비 1:1:2와는 다름 */
/*   flex-basis: 100px; */
  
/*   4. flex */
/*   전체 너비 1:1:1 */
/*   flex-basis: 0; */
  
/*   flex-basis 값이 auto가 아닌 0으로 들어감 */
/*   flex: 1; */
  
/*   flex: 증가너비 감소너비 기본너비(기본값은 0) */
/*   flex: 증가너비는 1 감소너비는 1 기본너비는 auto */
/*   flex: 1 1 auto;
  
  
} */

/* 3. flex basis */
/* 클래스 클래스 같은 명시도 주기(덮어쓰기 하기위해서) */
/* .container .item3 { */
/*   1:1:2 너비로 item 너비 맞춰짐 */
/*   flex-grow: 2; */
/* } */
  
 
/*  5. align-self */
.container {
/*   container의 높이 */
  height: 400px;
  
  border: 4px solid;
  display: flex;
  
/*   요소 여러줄 묶음 */
  flex-wrap: wrap;
  
/*   각각의 item 높이값이 100px로 설정되어 있어 마치 flex-start처럼 동작하는 것처럼 보인다 */
/*   align-items: stretch; */
  
/*   각각의 flex-end 지점에 정렬 */
  align-items: flex-end;
}

.container .item{
  width: 100px;
  height: 100px;
  background: tomato;
  border: 4px dashed red;
  border-radius:10px;
}

.container .item2{
/*   item2클래스 갖고있는 item 스스로만 center에 해당하는 값으로 바뀜 */
  align-self: center;
}

.container .item4{
/*   start 지점으로 4번 박스만 이동 */
  align-self: flex-start;
}

.container .item7{
/*   item 각각의 높이 값이 있어 늘어나진 않음 */
  align-self: stretch;
  
/*   높이 값 초기확 */
/*   7번 늘어남 */
  height: auto;
}
  
