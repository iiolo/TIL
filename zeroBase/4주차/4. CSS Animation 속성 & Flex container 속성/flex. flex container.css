  /* 3. float 요소들 못감싸는 것을 방지하기 위해 */

  /* .clearfix::after {
    content: "";
    display: block;
    clear: both;
  } */

  /* .container {
    border: 2px solid red; */
  /*   4. flex */
  /*   display: flex; */

     /*   2. 인라인 블록요소 띄어쓰기 없애려면 */
  /*   font-size: 0; */

  /* flex container 속성  */
  /*   1. display */
  /*   container 자체가 수평으로 쌓임 */
  /*   display: inline-flex;

  } */

  /* .container .item {
    width: 100px;
    height: 100px;
    border: 3px solid;
    border-radius: 10px; */



  /*   수평정렬 */
  /*   1. 수평정렬하지만 가로 세로 값 못가짐 */
  /*   display: inline; */

  /*   2. 인라인의 기본적 특성 가지고 가로 세로 값 가질 수 있고 margin, padding의 위아래 값 가질 수 있음 하지만 줄바꿈이 띄어쓰기 한칸 씩 가지게 됨(블록요소 특성을 가질 수 있는 인라인 요소이기에) 각각의 아이템이 글자화 */
  /*   display: inline-block; */

  /*  2.  띄어쓰기 없애기 위해 font-size을 0으로 만들었기 때문에 다시 font-size 되돌려놔야함 */
  /*   font-size: 16px; */

  /*   3.float */
  /*   요소를 띄우는 것이여서 container 각각의 요소 못감쌈 */
  /*   float: left; */

  /* } */

  /* flex container 속성  */
  /* 2. flex-flow */
  /* .container {
    border: 4px solid;
    display: flex;
    flex-wrap:wrap;
  }

  .container .item {
    width: 150px;
    height: 100px;
    background: tomato;
    border: 4px dashed red;
  } */

  /* flex container 속성 */
  /* 3. justify-content */
  /* .container {
    border: 4px solid;
    display: flex;
     */
  /*   왼쪽 정렬 */
  /*   justify-content: flex-start; */

  /*   오른쪽 정렬 */
  /*   justify-content: flex-end; */

  /*   중앙정렬 */
  /*   justify-content: center; */

  /*   첫 item 마지막 item들 시작점 끝점 각각 붙인 후 여백 균등분배 */
  /*   justify-content: space-between; */

  /*   여백 균등 분배 */
  /*   justify-content: space-around;

  } */

  /* .container .item {
    width: 100px;
    height: 100px;
    background: tomato;
    border: 4px dashed red;
    border-radius:10px;

  }
   */

  /* 4. align-content */
  /* .container {
    height: 400px;
    border: 4px solid;
    display: flex; */

  /*   늘리는 개념 */
  /*   align-content: stretch; */

  /*   교차축 끝점 기준*/
  /*   align-content: flex-end; */

  /*   교차축 가운데 정렬 */
  /*   align-content: center; */

  /*   첫번째 줄과 마지막 줄 양쪽에 붙이고 나머지 영역 균등 배분 */
  /*   align-content: space-between; */

  /*   전체 여백을 각각의 줄 균등 분배 */
  /*   align-content: space-around; */

  /*   2줄로 변화 */
  /*   flex-wrap: wrap;
  } */

  /* .container .item {
    width: 120px; */
  /*   height 값 주면 align content:stretch는 안늘려짐 높이값이 지정되어있는거나 마찬가지여서 */
  /*   height: 100px;
    background: tomato;
    border: 4px dashed red;
    border-radius: 10px;
  }
   */

  /* align-items */
  .container {
    height: 400px;
    border: 4px solid;
    display: flex;

  /*   여러줄 묶음으로 만들기 */
    flex-wrap: wrap;

  /*   하나의 줄에서 교차축 정렬 방식 */
  /*   각각의 줄 시작점 기준 정렬 */
  /*   align-items: flex-start; */

  /*   각각의 줄 끝점 기준 정렬 */
  /*   align-items: flex-end; */

  /*   각각의 줄의 중앙 기준 정렬 */
  /*   align-items: center; */

  /*   각각의 줄의 문자열 기준 정렬 */
    align-items: baseline;
  }

  .container .item {
    width: 120px;
    height: 100px;
    background: tomato;
    border: 4px dashed red;
    border-radius: 10px;
    font-size: 30px;

  /*  item이 또하나의 container화 시킴 */
    display: flex;

  /*    text가 하나의 item이 되고 item이 하나의 container가 되어 가운데 정렬 */
    justify-content: center;

  /*   item 안 줄들은 한줄이니까 align content */
  /*   글자를 item 안에서 수직 수평 가운데 정렬  */
    align-items: center;

  }

  /* .container .item:nth-child(3) {
    font-size: 50px;
  } */
